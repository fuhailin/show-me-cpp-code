load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

package(default_visibility = ["//visibility:public"])

config_setting(
    name = "macos",
    values = {
        "apple_platform_type": "macos",
        "cpu": "darwin",
    },
)

filegroupz(
    name = "all_srcs",
    srcs = glob(["**"]),
)

cmake(
    name = "thrift",
    build_args = [
        "--verbose",
        "-j `nproc`",
    ],
    build_data = [
        "@org_gnu_bison//:bison",
    ],
    cache_entries = {
        "BUILD_TESTING": "OFF",
        "BUILD_TUTORIALS": "OFF",
        "BUILD_C_GLIB": "OFF",
        "BUILD_JAVA": "OFF",
        "THRIFT_COMPILER_C_GLIB": "OFF",
        "THRIFT_COMPILER_D": "OFF",
        "OPENSSL_ROOT_DIR": "$EXT_BUILD_DEPS/openssl",
        "LIBEVENT_ROOT": "$EXT_BUILD_DEPS/libevent",
    },
    lib_source = ":all_srcs",
    out_binaries = [
        "thrift",
    ],
    deps = [
        "@boost//:algorithm",
        "@boost//:locale",
        "@boost//:noncopyable",
        "@boost//:numeric_conversion",
        "@boost//:scope_exit",
        "@boost//:scoped_array",
        "@boost//:shared_array",
        "@boost//:tokenizer",
        "@libevent",
        "@openssl",
    ],
)

cc_binary(
    name = "client",
    srcs = glob(["main/my_client.cpp"]),
    copts = ["-Iinclude"],
    linkopts = ["-lexpat"],
    deps = [
        "@apache_thrift//:thrift",
    ],
)

cc_binary(
    name = "server",
    srcs = glob(["main/my_server.cpp"]),
    copts = ["-Iinclude"],
    linkopts = ["-lexpat"],
    deps = [
        "@apache_thrift//:thrift",
    ],
)
