"""Provides the repository macro to import LLVM."""

# load("//:repo.bzl", "tf_http_archive")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

def clean_dep(dep):
    return str(Label(dep))

# def repo():
#     # Check out LLVM and MLIR from llvm-project.
#     LLVM_COMMIT = "f402e682d0ef5598eeffc9a21a691b03e602ff58"
#     LLVM_SHA256 = "94f7f1962bb702d9b751bb5e036e54d5fca786f7eeba18e38ba825372d8ad371"
#     LLVM_URLS = [
#         "https://github.com.cnpmjs.org/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
#         "https://hub.fastgit.org/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
#         "https://github.com/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
#     ]
#     tf_http_archive(
#         name = "llvm-project",
#         sha256 = LLVM_SHA256,
#         strip_prefix = "llvm-project-" + LLVM_COMMIT,
#         urls = LLVM_URLS,
#         additional_build_files = {
#             clean_dep("//llvm:llvm.autogenerated.BUILD"): "llvm/BUILD",
#             "//mlir:BUILD": "mlir/BUILD",
#             "//mlir:test.BUILD": "mlir/test/BUILD",
#         },
#     )


def repo():
    LLVM_COMMIT = "f402e682d0ef5598eeffc9a21a691b03e602ff58"
    LLVM_SHA256 = "94f7f1962bb702d9b751bb5e036e54d5fca786f7eeba18e38ba825372d8ad371"
    LLVM_URLS = [
        "https://github.com.cnpmjs.org/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
        "https://hub.fastgit.org/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
        "https://github.com/llvm/llvm-project/archive/{commit}.tar.gz".format(commit = LLVM_COMMIT),
    ]
    maybe(
        http_archive,
        name = "llvm-project",
        build_file = {
            clean_dep("//llvm:llvm.autogenerated.BUILD"): "llvm/BUILD",
            "//mlir:BUILD": "mlir/BUILD",
            "//mlir:test.BUILD": "mlir/test/BUILD",
        },
        urls = LLVM_URLS,
        strip_prefix = "llvm-project-" + LLVM_COMMIT,
    )